name: Tests

on: [push, pull_request]

env:
  BUILD_TYPE: RelWithDebInfo

jobs:
  build-test:
    name: Build and run unit tests (${{ matrix.compiler.name }} ${{ matrix.compiler.VERSION }})
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        compiler:
          - { name: GCC, CC: gcc, CXX: g++, VERSION: 11, COVERAGE: OFF }
          - { name: Clang, CC: clang, CXX: clang++, VERSION: 13, COVERAGE: ON }

    steps:
    - uses: actions/checkout@v2

    - name: Set up Clang
      if: matrix.compiler.name == 'Clang'
      uses: egor-tensin/setup-clang@v1
      with:
        version: ${{ matrix.compiler.VERSION }}
        cc: 1

    - name: Set up GCC
      if: matrix.compiler.name == 'GCC'
      uses: egor-tensin/setup-gcc@v1
      with:
        version: ${{ matrix.compiler.VERSION }}
        cc: 1

    - name: Select compiler
      run: |
         echo "CC=${{ matrix.compiler.CC }}-${{ matrix.compiler.VERSION }}" >> $GITHUB_ENV
         echo "CXX=${{ matrix.compiler.CXX }}-${{ matrix.compiler.VERSION }}" >> $GITHUB_ENV

    - name: Configure CMake
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DCODE_COVERAGE=${{ matrix.compiler.COVERAGE }}

    - name: Build
      run: cmake --build ${{github.workspace}}/build --parallel --config ${{env.BUILD_TYPE}}

    - name: Test
      working-directory: ${{github.workspace}}/build
      # Coverage processing seems to be broken when run through ctest
      # run: ctest -C ${{env.BUILD_TYPE}}
      run: ./mays_tests --use-colour=yes

    - name: Process coverage data
      if: matrix.compiler.COVERAGE == 'ON'
      working-directory: ${{github.workspace}}/build
      run: |
        llvm-profdata-${{ matrix.compiler.VERSION }} merge -sparse default.profraw -o coverage.profdata
        llvm-cov-${{ matrix.compiler.VERSION }} show ./mays_tests -instr-profile=coverage.profdata > coverage.txt

    - name: Upload coverage data to Codecov
      uses: codecov/codecov-action@v2
      if: matrix.compiler.COVERAGE == 'ON'
      with:
        files: ${{github.workspace}}/build/coverage.txt
